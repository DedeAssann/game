# kivy: 1.9

# Working on canvas
ScrollViewExample:
#Example:

<CanvasExample7@BoxLayout>:
   RelativeLayout:
      canvas:
         Color:
            rgb: 0, 0, 1
         Rectangle:
            size: self.size
   RelativeLayout:
      canvas:
         Color:
            rgb: 1, 1, 1
         Rectangle:
            size: self.size
   RelativeLayout:
      canvas:
         Color:
            rgb: 1, 0, 0
         Rectangle:
            size: self.size

<CanvasExample6@Widget>:
   BoxLayout:
      size: root.size
      Widget:
         canvas:
            Color:
               rgb: 0, 1, 0
            Rectangle:
               size: self.size
      RelativeLayout:
         canvas:
            Color:
               rgb: 0, 0, 1
            Rectangle:
               size: self.size

<CanvasExample4>:
   Button:
      pos: 100, 400
      text: "A"
      on_press: root.on_button_a_click()


<CanvasExample3@Widget>:
   canvas:
      Color:
         rgba: 1, .5, 1, 1
      Line:
         #circle: (center_x, center_y, radius)
         circle: (200, 200, 100)
         width: 2
      Line:
         #ellipse: (center_x, center_y, radius_x, radius_y)
         ellipse: (400, 300, 100, 200)
         width: 2
      Line:
         #rectangle: (x, y, width, height)
         rectangle: (500, 100, 300, 200)

<CanvasExample2@Widget>:
   canvas:
      Line:
         points: (0, self.height/2, self.width, self.height/2)
         width: 2
      Line:
         points: (self.width/2, 0, self.width/2, self.height)
         width: 2

#defining  variable in the .kv file
#:set s dp(150)

<CanvasExample1>:
   canvas:
      Rectangle:
         pos: self.center_x - s/2, self.center_y - s/2
         size: dp(150), dp(150)
      Ellipse:
         pos: dp(100), dp(200)
         size: s, s/2
      Line:
         #points: (x1, y1, x2, y2)
         points: (0, 0, self.width/4, 100, self.width/2, 0, self.width*3/4, 100, self.width, 0)
         width: 2


<ImagesExample@GridLayout>:
   cols: 3
   Image:
      source: "images/cake.jpg"
   Image:
      source: "images/cake.jpg"
      allow_stretch: True 
   Image:
      source: "images/cake.jpg"
      keep_ration: False
      allow_stretch: True 


<WidgetExample>:
   cols: 3
   ToggleButton:
      text: "OFF"
      on_state: root.on_toggle_button_state(self)
      size_hint: None, 1
      width: "100dp"
   Button:
      text: "Count"
      on_press: root.on_button_click()
      disabled: not root.count_enabled
   Label:
      text: root.my_text
      font_name: "fonts\Lcd.ttf"
      font_size: "80dp"
      color: 1, .4, 1, 1
   Switch:
      id: my_switch 
      on_active: root.on_switch_active(self)
      size_hint: None, 1
      width: "100dp"
      active: True
   Slider:
      id: my_slider
      min:0
      max:100
      value:50
      # on_value: root.on_slider_value(self)
      orientation: "vertical"
      disabled: not my_switch.active
   BoxLayout:
      orientation: "vertical"
      Label:
         text: str(int(my_slider.value))
         font_name: "fonts\Lcd.ttf"
         font_size: "80dp"
         color: 1, 0, 0, 1
      ProgressBar:
         value: my_slider.value
         max: 100
   TextInput:
      id: my_text_input
      multiline: False
      size_hint: None, 1
      width: "100dp"
      text: "foo"
      on_text_validate: root.on_text_validate(self)
   Label:
      text: root.my_text_input_txt
         

   
<PageLayoutExample>:
   MainWidget:
   BoxLayoutExample:
   AnchorLayoutExample:
   GridLayoutExample:
   ScrollViewExample:

<ScrollViewExample@ScrollView>:
   # It can have only one child
   StackLayoutExample:
      size_hint: 1, None
      height: self.minimum_height

<StackLayoutExample>:
   # left-right   top-bottom
   orientation: "lr-tb"
   # padding is an internal margin
   # padding: ("20dp", "20dp", "20dp", "20dp")
   # spacing is a margin between the different elements
   #spacing: "5dp", "5dp"
<GridLayoutExample@GridLayout>:
   # rows
   # columns
   cols: 3
   rows: 2
   Button:
      text: "A"
      size_hint: None, 1
      width: "60dp"
   BoxLayoutExample:
   Button:
      text: "C"
   Button:
      text: "D"
      size_hint: None, 1
      width: "60dp"
   Button:
      text: "E"
   Button:
      text: "F"



<AnchorLayoutExample@AnchorLayout>:
   anchor_x: "center"
   # right, center, left
   anchor_y: "top"
   # bottom, center, top
   BoxLayout:
      size_hint: .2, .2
      Button:
         text: "A"
      Button:
         text: "B"



<BoxLayoutExample@BoxLayout>:
   #orientation: "vertical"
   spacing: '10dp'
   Button:
      text: "A"
      size_hint: .5, .5
      #height: "60dp"
      pos_hint: {'center_y': .5}
      # {'x', 'center_x', 'rigth'} when stacking vertically
      # {'y', 'center_y', 'top'} when stacking horizontally
   BoxLayout:
      orientation: "vertical"
      Button:
         text: "B1"
         #size_hint: 1, 2
      Button:
         text: "B2"
      Button:
         text: "B3"
      Button:
         text: "B4"
   Label:
      text: "C"
      #size_hint: 1, 1



<MainWidget@Widget>:
   Button:
      text: "Hello"
      size: "100dp", "80dp"
      pos: "100dp", "200dp"
      color: 0, 0, 1, 1
   Label:
      text: "Hello 2"
      size: "100dp", "80dp"
      pos: "200dp", "200dp"
      color: 1, 0, 0, 1
